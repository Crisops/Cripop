---
  import IconClaqueta from "@/icons/IconClaqueta.astro"
  import IconEye from "@/icons/IconEye.astro"
  import IconLanguage from "@/icons/IconLanguage.astro"
  import IconTime from "@/icons/IconTime.astro"
  import SeasonSeries from "@/components/astro/SeasonsSeries.astro"
  import type { Genre, Videos, SpokenLanguage, Season} from "@/types/dataDetailsSeries"
  import ButtonViewTrailer from "@/components/react/ButtonViewTrailer"
  import ButtonViewSeasons from "@/components/react/ButtonViewSeasons"
  interface Props {
    id: number | undefined
    name: string | undefined
    genres?: Genre[]
    language?: SpokenLanguage[]
    overview?: string
    dateStart?: Date
    dateEnd?: Date
    tagline?: string
    numberEpisodes?: number
    numberSeasons?: number
    video?: Videos
    rate?: number
    seasons?: Season[]
  }

  const {id, name, genres, language, overview, dateStart, dateEnd, tagline, numberEpisodes, numberSeasons, video, rate, seasons} = Astro.props

  let episodes: number | undefined
  let idSerie: number | undefined
  let season: Season[] | undefined

  if (numberEpisodes && numberSeasons) {
    episodes = numberEpisodes
    season = seasons
    idSerie = id
  }

---

<div class="relative flex flex-col-reverse gap-10 xl:flex-row xl:gap-0">
  <SeasonSeries idSerie={idSerie} seasons={season}/>
  <div class="relative flex flex-grow flex-col gap-5 px-5 md:px-10 xl:max-2xl:pr-0">
    <h1 class=`font-Ubuntu ${name !== undefined && name.length >= 20 ? 'text-[3rem] leading-[45px] md:text-7xl xl:text-6xl' : 'text-5xl sm:max-xl:text-7xl xl:text-7xl min-[1700px]:text-8xl'} font-semibold text-white max-w-2xl m-0 uppercase`>{name}</h1>
    {
      tagline
       && 
      <div class="flex">
        <span class="text-zinc-400/50 font-bold font-Libre_Franklin text-xs ">{tagline}</span>
      </div>
    }
    <div class="flex flex-wrap items-center gap-4">
      <div class="flex flex-wrap max-w-sm items-center gap-2">
        <IconLanguage/>
        <div class="flex flex-wrap items-center gap-2">
          {language?.map(lang =>
            <span class="text-white uppercase font-Noto_Sans font-light text-sm 2xl:text-base"> {lang.name}</span>
           )}
        </div>
      </div>
      <div class="flex flex-wrap gap-2 items-center [&>span]:text-sm [&>span]:2xl:text-base">
        <IconClaqueta/>
        {genres?.map(gender => (<span class="text-white font-Noto_Sans font-light">{gender.name}</span>))}
      </div>
    </div>
    <div class="flex flex-col gap-1 py-1 [&>span]:text-sm [&>span]:2xl:text-base">
      <span class="text-white font-Noto_Sans font-light">Fecha de estreno: {dateStart}</span>
      <span class="text-white font-Noto_Sans font-light">Finalización: {dateEnd}</span>
      <span class="text-white font-Noto_Sans font-light">Rate: {rate?.toFixed(1).toString()}</span>
    </div>
    <div class="max-w-lg xl:max-2xl:max-w-xl">
      <p class="text-white font-Noto_Sans font-light line-clamp-5 text-sm 2xl:text-base">{overview || "Lo siento. No se encontro algún resumen"}</p>
    </div>
    <div class="flex gap-4 [&>div>span]:text-sm ">
      <div>
        <ButtonViewTrailer client:visible/>
      </div>
      <ButtonViewSeasons numberSeasons={numberSeasons} numberEpisodes={episodes} client:visible />
    </div>
  </div>
</div>
