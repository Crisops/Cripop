---
  import IconClaqueta from "@/icons/IconClaqueta.astro"
  import IconEye from "@/icons/IconEye.astro"
  import IconLanguage from "@/icons/IconLanguage.astro"
  import IconTime from "@/icons/IconTime.astro"
  import type { Genre, Videos, SpokenLanguage, Season} from "@/types/dataDetailsSeries"

  interface Props {
    id: number | undefined
    name: string | undefined
    genres?: Genre[]
    language?: SpokenLanguage[]
    overview?: string
    dateStart?: Date
    dateEnd?: Date
    tagline?: string
    numberEpisodes?: number
    numberSeasons?: number
    video?: Videos
    rate?: number
    seasons?: Season[]
  }

  const {name, genres, language, overview, dateStart, dateEnd, tagline, numberEpisodes, numberSeasons, video, rate} = Astro.props


  // let hour
  // let minutes
  // let seconds

  // if (duration) {
  //   hour = Math.floor(duration / 60) 
  //   minutes =  Math.floor(duration % 60) 
  //   seconds = Math.floor(duration / 60) 
  // }


---


<div class="relative flex flex-col gap-5 px-5 md:px-10 xl:max-2xl:pr-0">
  <h1 class=`font-Ubuntu ${name !== undefined && name.length >= 20 ? 'text-[3rem] leading-[45px] md:text-7xl' : 'text-5xl sm:max-xl:text-7xl xl:max-2xl:text-7xl 2xl:text-9xl '} font-semibold text-white max-w-2xl m-0 uppercase`>{name}</h1>
  <div class="flex">
    <span class="text-zinc-400/50 font-bold font-Libre_Franklin text-xs ">{tagline}</span>
  </div>
  <div class="flex flex-wrap items-center gap-4">
    <div class="flex flex-wrap max-w-sm items-center gap-2">
      <IconLanguage/>
      <div class="flex flex-wrap items-center gap-2">
        {language?.map(lang =>
          <span class="text-white uppercase font-Noto_Sans font-light text-sm 2xl:text-base"> {lang.name}</span>
         )}
      </div>
    </div>
    <div class="flex flex-wrap gap-2 items-center [&>span]:text-sm [&>span]:2xl:text-base">
      <IconClaqueta/>
      {genres?.map(gender => (<span class="text-white font-Noto_Sans font-light">{gender.name}</span>))}
    </div>
  </div>
  <div class="flex flex-col gap-1 py-1 [&>span]:text-sm [&>span]:2xl:text-base">
    <span class="text-white font-Noto_Sans font-light">Fecha de estreno: {dateStart}</span>
    <span class="text-white font-Noto_Sans font-light">Finalización: {dateEnd}</span>
    <span class="text-white font-Noto_Sans font-light">Rate: {rate?.toFixed(1).toString()}</span>
  </div>
  <div class="max-w-lg xl:max-2xl:max-w-xl">
    <p class="text-white font-Noto_Sans font-light line-clamp-5 text-sm 2xl:text-base">{overview || "Lo siento. No se encontro algún resumen"}</p>
  </div>
  <div class="flex gap-4 [&>div>span]:text-sm ">
    <div>
      <button class="border border-zinc-500 px-5 py-2 font-Noto_Sans text-white font-medium text-sm transition-colors duration-300 hover:bg-white hover:text-black">Ver Trailer</button>
    </div>
    <div class="flex items-center gap-2 px-5 py-2 bg-zinc-950 cursor-pointer text-white transition-colors duration-300 ease-in-out hover:bg-zinc-200
    hover:text-zinc-950 [&>span]:hover:text-zinc-950 ">
      <span class="text-white font-Noto_Sans font-medium">Episodios: {numberEpisodes} | </span>
      <span class="text-white font-Noto_Sans font-medium">Temporadas: {numberSeasons}</span>
      <IconEye/>
    </div>
  </div>
</div>