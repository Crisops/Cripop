---
  import IconLanguage from "@/icons/IconLanguage.astro"
  import IconClaqueta from "@/icons/IconClaqueta.astro"
  import IconTime from "@/icons/IconTime.astro"
  import type { Genre } from "@/types/DetailsMovieId"

  interface Props {
    title?: string,
    language?: string,
    genders?: Genre[],
    overview?: string,
    date?: Date,
    rate?: number,
    time?: number,
  }

  const {title, language, genders, overview, date, rate, time} = Astro.props

    let hour
    let minutes

  if (time) {
    hour = Math.floor(time / 60) 
    minutes =  Math.floor(time % 60) 
  }


---


<div class="relative flex flex-col gap-5 px-5 md:px-10">
  <h1 class=`font-Ubuntu ${title !== undefined && title.length >= 20 ? 'text-[3rem] leading-[45px] md:text-7xl xl:text-6xl' : 'text-5xl sm:max-xl:text-7xl xl:text-7xl'} font-semibold text-white max-w-3xl m-0 uppercase`>{title}</h1>
  <div class="flex items-center gap-4">
    <div class="inline-flex items-center gap-2">
      <IconLanguage/>
      <span class="text-white uppercase font-Noto_Sans font-light text-sm sm:text-base">{language}</span>
    </div>
    <div class="inline-flex gap-2">
      <IconClaqueta/>
      {genders?.map(gender => (<span class="text-white font-Noto_Sans font-light text-sm sm:text-base">{gender.name}</span>))}
    </div>
  </div>
  <div class="flex flex-col gap-1 py-1">
    <span class="text-white font-Noto_Sans font-light text-sm sm:text-base">Fecha de estreno: {date}</span>
    <span class="text-white font-Noto_Sans font-light text-sm sm:text-base">Rate: {rate?.toFixed(1).toString()}</span>
  </div>
  <div class="max-w-lg">
    <p class="text-white font-Noto_Sans font-light text-sm sm:text-base">{overview}</p>
  </div>
  <div class="flex gap-2">
    <IconTime/>
    <span class="text-white font-Noto_Sans font-light text-sm sm:text-base">{hour} horas {minutes} minutos</span>
  </div>
</div>
