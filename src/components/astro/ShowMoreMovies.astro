---
  import Filters from "@/components/react/Filters"
  import type { Genders, MovieWithGenders } from "@/types/Genders"
  import type { Movies } from "@/types/dataMovie"
  import { getGendersMoviesList } from "@/services/get_genders"
  import { getGendersMovies } from "@/services/get_genders_list"
  import ShowMovie from "./ShowMovie.astro"
  import { getPosterPath } from "@/services/get_poster_img"
  import Footer from "@/components/astro/Footer.astro";
  import type { ResultFilters } from "@/types/dataFilters"
  import type { Backdrop } from "@/types/imagesMovies"

  interface Props {
    url: string
    title: string
    choose: string
  }

  
  const{ url, title, choose } = Astro.props
  const ACCESS_TOKEN = import.meta.env.SECRET_TOKEN_ACCESS
  
  const options = {
    method: 'GET',
    headers: {
      accept: 'application/json',
      Authorization: `Bearer ${ACCESS_TOKEN}`
    }
  };

  let resultFilters: ResultFilters | undefined
  let imgMovieFilter: Backdrop[]
  let listGenders: MovieWithGenders
  

  if (Astro.request.method === "POST") {
    try {
      const data = await Astro.request.formData();
      const rate = data.get("vote_average.gte");
      const sort = data.get("sort_by");
      const genre = data.get("with_genres");
      const viewUser = data.get("choose");
      
      const URL_DISCOVER = `https://api.themoviedb.org/3/discover/${viewUser}?include_adult=false&language=es&page=1&sort_by=${sort}&vote_average.gte=${rate}&with_genres=${genre}`

      const response = await fetch(URL_DISCOVER, options)
      resultFilters = await response.json() as ResultFilters

      const movie_gendersId = resultFilters.results.map(movie => movie.genre_ids)

      const gendersList = await getGendersMoviesList(ACCESS_TOKEN) as Genders

      listGenders = await getGendersMovies(movie_gendersId, gendersList) as MovieWithGenders

      imgMovieFilter = await Promise.all(resultFilters.results.map((movie) => getPosterPath(ACCESS_TOKEN, movie.id, "movie"))) as Backdrop[];

      
    } catch (error) {
      if (error instanceof Error) {
        console.error(error.message);
      }
    }
  }

  const response = await fetch(url, options)

  const movies = await response.json() as Movies

  const movie_gendersId = movies.results.map(movie => movie.genre_ids)

  const gendersList = await getGendersMoviesList(ACCESS_TOKEN) as Genders

  const listIdWithGender = await getGendersMovies(movie_gendersId, gendersList) as MovieWithGenders

  const img = await Promise.all(movies.results.map((movie) => getPosterPath(ACCESS_TOKEN, movie.id, "movie")));

---

<main class="relative w-full overflow-hidden pt-40">
  <div class="relative px-5 md:px-10 flex items-center flex-col xl:flex-row justify-between">
    <h1 class="text-white/50 text-3xl xl:text-xl font-Noto_Sans self-start font-light">{title}</h1>
    <div class="flex flex-grow w-full xl:w-fit xl:flex-grow-0 flex-wrap items-center pt-10 gap-10 justify-start lg:max-xl:justify-center xl:justify-start xl:pt-0">
      <Filters choose={choose}/>
    </div>
  </div>
  <div id="containerMovies" class="relative h-full mt-10">
    <div class="relative grid place-items-center grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-5 px-5 md:px-10 pb-20 overflow-hidden">
      {
        resultFilters != undefined
        ?
        resultFilters.results.map((movie, index) =>(
          <ShowMovie
            id={movie.id}
            url_image={imgMovieFilter[index]?.file_path}
            title={movie.title}
            widht={500}
            height={700}
            genders={listGenders}
            rate={movie.vote_average}
            index={index}
          />
        ))
        :
        movies.results.map((movie, index) =>(
          <ShowMovie
            id={movie.id}
            url_image={img[index]?.file_path}
            title={movie.title}
            widht={500}
            height={700}
            genders={listIdWithGender}
            rate={movie.vote_average}
            index={index}
          />
        ))
      }
    </div>
  </div>
  <Footer/>
</main>

