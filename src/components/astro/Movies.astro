<!-- ---
import Filters from "../react/Filters";
import SearchMovie from "../react/SearchMovie";

import { Image } from "astro:assets";
import {type Movies } from '@/types/dataMovie'
import IconStar from '@/icons/IconStar.astro'
import { getGenders } from "@/services/get_genders";

const API_KEY = import.meta.env.SECRET_API_KEY
const ACCESS_TOKEN = import.meta.env.SECRET_TOKEN_ACCESS


const URL_DISCOVER = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&sort_by=popularity.desc`
const URL_IMG: string = `https://image.tmdb.org/t/p/original/`



const options = {
  method: 'GET',
  headers: {
    accept: 'application/json',
    Authorization: `Bearer ${ACCESS_TOKEN}`
  }
}

  const response = await fetch(`${URL_DISCOVER}`, options)

  const movies = await response.json() as Movies

  const moviesGendersId: number[][] = movies.results.map(movie => movie.genre_ids)
  
  const gendersList = await getGenders(ACCESS_TOKEN)

  const gendersMovie = moviesGendersId.map((listIdGenders) => { // Revisar el ARRAY de la linea 31 porque estoy creando un array innecesario
    const movieWithGenres = listIdGenders.map(genreId => {
      const genre = gendersList?.genres.find(genre => genre.id === genreId)
      return genre
    })
    return movieWithGenres
  })
  
  const gender = gendersMovie.map(gend =>{
    const nameGender = gend.map(g =>{
      return g?.name
    })
    return [...nameGender]
  })

---

<div class="relative h-full flex flex-col gap-10 pt-5">
  <div class="block w-full h-full">
    <div class="grid w-full h-full px-10 gap-2 grid-cols-[repeat(auto-fit,_minmax(300px,1fr))] auto-rows-[500px]">
      {
        movies.results.map((movies,index) => (
          <div id={`${movies.id}`} class="relative overflow-hidden rounded-lg group">
            <Image
            class="absolute max-w-full h-full object-cover rounded-lg cursor-pointer transition-transform duration-500 group-hover:scale-125"
            src={`${URL_IMG}${movies.poster_path}`}
            alt={`${movies.title}`}
            width="400"
            height="550" 
            quality={"max"}
            />
            <footer class="flex flex-col justify-center items-end gap-1 absolute w-full right-0 bottom-0 py-2 px-3 pointer-events-none z-[2]">
              <div class="flex flex-wrap max-w-[200px] justify-end gap-1 pb-1 transition-opacity duration-300 opacity-0 group-hover:opacity-100">
                {gender[index].map(el => 
                  (
                    <span class:list={[
                      "py-1 px-2 text-white font-medium font-Libre_Franklin text-xs rounded-lg",
                      {
                        "bg-gradient-to-r from-violet-950 to-fuchsia-950": el === "Animación",
                        "bg-gradient-to-r from-sky-500 to-indigo-500": el === "Música",
                        "bg-gradient-to-r from-purple-500 to-pink-500": el === "Familia",
                        "bg-gradient-to-r from-rose-700 to-pink-600": el === "Fantasía",
                        "bg-gradient-to-r from-green-500 to-green-700": el === "Comedia",
                        "bg-gradient-to-r from-emerald-500 to-emerald-900": el === "Ciencia ficción",
                        "bg-gradient-to-r from-cyan-500 to-blue-500": el === "Acción",
                        "bg-gradient-to-r from-stone-500 to-stone-700": el === "Suspense",
                        "bg-gradient-to-r from-gray-700 via-gray-900 to-black": el === "Terror",
                        "bg-gradient-to-r from-[#240304] to-[#BB0F14]": el === "Misterio",
                        "bg-gradient-to-r from-slate-900 via-purple-900 to-slate-900": el === "Drama",
                        "bg-gradient-to-l from-[#FFC747] to-[#AB0F16]": el === "Historia",
                        "bg-gradient-to-r from-emerald-500 to-lime-600": el === "Bélica",
                        "bg-gradient-to-r from-red-500 to-red-800": el === "Crimen",
                        "bg-gradient-to-r from-blue-700 via-blue-800 to-gray-900": el === "Aventura",
                      }
                    ]}>{el}</span>
                  ))}
              </div>
              <div class="flex gap-1 flex-grow">
                <div class:list={[
                  'flex gap-2 opacity-0 group-hover:opacity-100',
                  { 
                  "text-red-600": movies.vote_average < 5,
                  "text-yellow-500": movies.vote_average >=5 && movies.vote_average < 8,
                  "text-green-600": movies.vote_average >= 8
                  }
                ]}>
                <span class="text-lg font-Noto_Sans font-bold text-white">Rate:</span>
                <IconStar/>
                </div>
                <span class:list={[
                  'text-lg font-bold font-Noto_Sans opacity-0 group-hover:opacity-100',
                  { 
                  "text-red-600": movies.vote_average < 5,
                  "text-yellow-500": movies.vote_average >=5 && movies.vote_average < 8,
                  "text-green-600": movies.vote_average >= 8
                  }
                ]}>{movies.vote_average.toFixed(1)}
                </span>
              </div>
            </footer>
              <div class="absolute inset-0 bg-gradient-to-t from-black translate-y-full transition-all duration-300 ease-linear group-hover:translate-y-0 cursor-pointer"></div>
          </div>
        ))
      }
    </div>
  </div>
</div>
 -->
